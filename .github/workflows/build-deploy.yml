name: Build and Deploy Code

on: [push, pull_request]

jobs:
  job1:
    env:
      DATABASE_HOSTNAME: localhost
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: Wysescale
      DATABASE_NAME: fastapi
      DATABASE_USERNAME: postgres
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 25
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: Wysescale
          POSTGRES_DB: fastapi
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3

      - name: Install python version 3.12.6
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.6"

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: update pip
        run: python -m pip install --upgrade pip

      - name: install all dependencies
        run: pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for Postgres...";
            sleep 5;
          done
          echo "Postgres is ready!"

      - name: Run tests with pytest and generate report
        run: |
          pytest --junitxml=test-results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/apifast:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
