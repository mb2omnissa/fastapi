name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    env:
      DATABASE_HOSTNAME: localhost
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: Wysescale
      DATABASE_NAME: fastapi
      DATABASE_USERNAME: postgres
      SECRET_KEY: c5ac49e468d664c7186a475dff7f33d29ede3f2a88aea4afb4b05d2e150f7095
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 25
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: Wysescale
          POSTGRES_DB: fastapi
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: Install python version 3.12.6
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.6"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest

#      - name: Login to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          context: ./
#          file: ./Dockerfile
#          builder: ${{ steps.buildx.outputs.name }}
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/apifast:latest
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache
#      - name: Image digest
#        run: echo ${{ steps.docker_build.outputs.digest }}


  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: deploying stuff
        run: echo "going to deploy some stuff"